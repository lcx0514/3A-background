<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	 http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-2.5.xsd ">



	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- 数据库保存的密码是使用MD5算法加密的，所以这里需要配置一个密码匹配对象 -->
	<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Md5CredentialsMatcher" />

	<!--自定义认证 -->
	<bean id="myRealm" class="com.unitrust.timestamp3A.authorization.realm.MyRealm">
		<property name="sessionTime" value="900000" /><!-- 15分钟 -->
	</bean>
	
	<!-- Shiro安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--多realms配置 -->
		<property name="realms">
			<list>
				<ref bean="myRealm" />
				
			</list>
		</property>
	</bean>

	<!-- Shiro主过滤器本身功能十分强大，其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 Web应用中，Shiro可控制的Web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口，这个属性是必须的 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
		<property name="loginUrl" value="/login.do" />
		<!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在LoginController里硬编码) -->
		<!-- <property name="successUrl" value="/" ></property> -->
		<!-- 用户访问未对其授权的资源时，所显示的连接 -->
		<property name="unauthorizedUrl" value="/noAuthorization.jsp" />
		<property name="filterChainDefinitions">
			<value>
				/logout.do = anon
				/login.do = anon
				/check.do = anon
				/js/* = anon
				/css/** = anon
				/img/** = anon
				/fonts/** = anon
				/main/* = authc
				/user/* =roles[/user/]
				/roles/* = roles[/roles/]
				/custom/* = roles[/custom/]
				/order/* = roles[/order/]
				/consume/* = roles[/consume/]
				/consume/cci/* = roles[/consume/cci/]
				/consume/log/person/* =roles[/consume/log/person/]
				/consume/log/enterprise/* =roles[/consume/log/enterprise/]
				/logs/* = roles[/logs/]
				/combo/* = roles[/combo/]
				/business/* = roles[/business/]
				/personal/* = roles[/personal/]
				/task/* = roles[/task/]
				/** = authc
			</value>
		</property>
	</bean>
</beans>